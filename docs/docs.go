// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user/signin": {
            "post": {
                "description": "로그인",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth tag"
                ],
                "summary": "로그인",
                "parameters": [
                    {
                        "description": "signInReq",
                        "name": "signInReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authdto.SignInRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "로그인 성공",
                        "schema": {
                            "$ref": "#/definitions/authdto.SignInResponseWrapperDTO"
                        }
                    },
                    "400": {
                        "description": "입력값이 유효하지 않음",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "유저가 존재하지 않거나 비밀번호가 틀림",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "network error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "회원가입",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth tag"
                ],
                "summary": "회원가입",
                "parameters": [
                    {
                        "description": "signUpReq",
                        "name": "signUpReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authdto.SignUpRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/authdto.SignUpResponseWrapperDTO"
                        }
                    },
                    "400": {
                        "description": "입력값이 유효하지 않음",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "이미 존재하는 계정",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{user_id}/profile": {
            "get": {
                "description": "Read user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User tag"
                ],
                "summary": "Read user profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/userdto.ReadUserProfileResponseWrapperDTO"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "요청을 제대로 수행하지 못함",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "network error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User tag"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "jwt token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "updateUserProfileReq",
                        "name": "updateUserProfileReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.UpdateUserProfileRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/userdto.UpdateUserProfileResponseWrapperDTO"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "요청을 제대로 수행하지 못함",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "network error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authdto.SignInRequestDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "authdto.SignInResponseDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authdto.SignInResponseWrapperDTO": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/authdto.SignInResponseDTO"
                }
            }
        },
        "authdto.SignUpRequestDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authdto.SignUpResponseDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authdto.SignUpResponseWrapperDTO": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/authdto.SignUpResponseDTO"
                }
            }
        },
        "types.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/types.ErrorDetail"
                }
            }
        },
        "userdto.ReadUserProfileResponseDTO": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "userdto.ReadUserProfileResponseWrapperDTO": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/userdto.ReadUserProfileResponseDTO"
                }
            }
        },
        "userdto.UpdateUserProfileRequestDTO": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "userdto.UpdateUserProfileResponseDTO": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "userdto.UpdateUserProfileResponseWrapperDTO": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/userdto.UpdateUserProfileResponseDTO"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "petstore.swagger.io",
	BasePath:         "/v2",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server Petstore server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
